{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.initialState;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.state = JSON.parse(JSON.stringify(initialState));\n        this.status = Game.status.idle;\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.getStatus() === \"playing\") this.state = this.moveAndMerge(this.state, \"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.getStatus() === \"playing\") this.state = this.moveAndMerge(this.state, \"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() === \"playing\") this.state = this.moveAndMerge(this.state, \"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() === \"playing\") this.state = this.moveAndMerge(this.state, \"down\");\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.status.playing;\n                this.addRandomTile(this.state);\n                this.addRandomTile(this.state);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = Game.status.idle;\n                this.state = JSON.parse(JSON.stringify(this.initialState));\n                this.score = 0;\n            }\n        },\n        {\n            key: \"moveAndMerge\",\n            value: function moveAndMerge(prevGameState, direction) {\n                var _this = this;\n                var grid = JSON.parse(JSON.stringify(prevGameState));\n                var size = grid.length;\n                var moveRow = function(row) {\n                    var reverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                    if (reverse) row.reverse();\n                    var nonZeroElements = row.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = 0; i < nonZeroElements.length - 1; i++)if (nonZeroElements[i] === nonZeroElements[i + 1]) {\n                        nonZeroElements[i] *= 2;\n                        nonZeroElements[i + 1] = 0;\n                        _this.score += nonZeroElements[i];\n                        if (_this.score === 2048) _this.status = Game.status.win;\n                    }\n                    var mergedElements = nonZeroElements.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(mergedElements.length < row.length)mergedElements.push(0);\n                    if (reverse) mergedElements.reverse();\n                    return mergedElements;\n                };\n                var getColumn = function(gridToGetFrom, colIndex) {\n                    return gridToGetFrom.map(function(row) {\n                        return row[colIndex];\n                    });\n                };\n                var setColumn = function(gridToSetTo, colIndex, newCol) {\n                    newCol.forEach(function(value, rowIndex) {\n                        gridToSetTo[rowIndex][colIndex] = value;\n                    });\n                };\n                if (direction === \"left\" || direction === \"right\") {\n                    var reverse = direction === \"right\";\n                    for(var row = 0; row < size; row++)grid[row] = moveRow(grid[row], reverse);\n                } else if (direction === \"up\" || direction === \"down\") {\n                    var reverse1 = direction === \"down\";\n                    for(var col = 0; col < size; col++){\n                        var column = getColumn(grid, col);\n                        var newColumn = moveRow(column, reverse1);\n                        setColumn(grid, col, newColumn);\n                    }\n                }\n                if (JSON.stringify(prevGameState) === JSON.stringify(grid)) {\n                    if (!this.movesAvailable(prevGameState)) this.status = Game.status.lose;\n                    return prevGameState;\n                }\n                if (this.status === \"win\") return prevGameState;\n                return this.addRandomTile(grid);\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile(resGrid) {\n                var size = resGrid.length;\n                var emptyCells = [];\n                for(var row = 0; row < size; row++){\n                    for(var col = 0; col < size; col++)if (resGrid[row][col] === 0) emptyCells.push([\n                        row,\n                        col\n                    ]);\n                }\n                if (emptyCells.length === 0) return resGrid;\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), randomRow = _emptyCells_Math_floor[0], randomCol = _emptyCells_Math_floor[1];\n                resGrid[randomRow][randomCol] = Math.random() < 0.1 ? 4 : 2;\n                return resGrid;\n            }\n        },\n        {\n            key: \"movesAvailable\",\n            value: function movesAvailable(grid) {\n                var size = grid.length;\n                // Check for empty cells\n                for(var row = 0; row < size; row++)for(var col = 0; col < size; col++){\n                    if (grid[row][col] === 0) return true;\n                }\n                // Check for possible merges\n                for(var row1 = 0; row1 < size; row1++)for(var col1 = 0; col1 < size; col1++){\n                    if (col1 < size - 1 && grid[row1][col1] === grid[row1][col1 + 1]) return true; // horizontally\n                    if (row1 < size - 1 && grid[row1][col1] === grid[row1 + 1][col1]) return true; // vertically\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"initialState\", [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n]);\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"status\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$table = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$rows = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)($197cd56b15c33885$var$table.querySelectorAll(\".field-row\"));\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$lose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$win = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$updateTableCells = function() {\n    var gameState = $197cd56b15c33885$var$game.getState();\n    gameState.forEach(function(row, i) {\n        row.forEach(function(cell, j) {\n            var currentCell = $197cd56b15c33885$var$rows[i].children[j];\n            currentCell.className = \"field-cell\";\n            if (cell) {\n                currentCell.classList.add(\"field-cell--\".concat(cell));\n                currentCell.textContent = cell;\n            } else currentCell.textContent = \"\";\n        });\n    });\n};\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    var isActive = $197cd56b15c33885$var$game.status === $3d28d7f1aac198f5$exports.status.playing;\n    if ($197cd56b15c33885$var$game.status === $3d28d7f1aac198f5$exports.status.idle) $197cd56b15c33885$var$game.start();\n    else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$updateTableCells();\n    $197cd56b15c33885$var$startBtn.className = !isActive ? \"button restart\" : \"button start\";\n    $197cd56b15c33885$var$startBtn.textContent = !isActive ? \"Restart\" : \"Start\";\n    $197cd56b15c33885$var$startMessage.style = \"display: \".concat(!isActive ? \"none\" : \"block\");\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$lose.classList.add(\"hidden\");\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    e.preventDefault();\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        switch(e.key){\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            default:\n                return;\n        }\n        $197cd56b15c33885$var$updateTableCells();\n        $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n        if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$lose.classList.toggle(\"hidden\");\n        if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$win.classList.toggle(\"hidden\");\n    }\n});\n\n})();\n//# sourceMappingURL=index.9b209298.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startBtn = document.querySelector('.start');\nconst table = document.querySelector('.game-field');\nconst rows = [...table.querySelectorAll('.field-row')];\nconst startMessage = document.querySelector('.message-start');\nconst score = document.querySelector('.game-score');\nconst lose = document.querySelector('.message-lose');\nconst win = document.querySelector('.message-win');\n\nconst updateTableCells = () => {\n  const gameState = game.getState();\n\n  gameState.forEach((row, i) => {\n    row.forEach((cell, j) => {\n      const currentCell = rows[i].children[j];\n\n      currentCell.className = 'field-cell';\n\n      if (cell) {\n        currentCell.classList.add(`field-cell--${cell}`);\n        currentCell.textContent = cell;\n      } else {\n        currentCell.textContent = '';\n      }\n    });\n  });\n};\n\nstartBtn.addEventListener('click', () => {\n  const isActive = game.status === Game.status.playing;\n\n  if (game.status === Game.status.idle) {\n    game.start();\n  } else {\n    game.restart();\n  }\n\n  updateTableCells();\n\n  startBtn.className = !isActive ? 'button restart' : 'button start';\n  startBtn.textContent = !isActive ? 'Restart' : 'Start';\n  startMessage.style = `display: ${!isActive ? 'none' : 'block'}`;\n  score.textContent = game.getScore();\n  lose.classList.add('hidden');\n});\n\ndocument.addEventListener('keydown', (e) => {\n  e.preventDefault();\n\n  if (game.getStatus() === 'playing') {\n    switch (e.key) {\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      default:\n        return;\n    }\n\n    updateTableCells();\n    score.textContent = game.getScore();\n\n    if (game.getStatus() === 'lose') {\n      lose.classList.toggle('hidden');\n    }\n\n    if (game.getStatus() === 'win') {\n      win.classList.toggle('hidden');\n    }\n  }\n});\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\nclass Game {\n  static initialState = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  static status = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(initialState = Game.initialState) {\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.state = JSON.parse(JSON.stringify(initialState));\n    this.status = Game.status.idle;\n    this.score = 0;\n  }\n\n  moveLeft() {\n    if (this.getStatus() === 'playing') {\n      this.state = this.moveAndMerge(this.state, 'left');\n    }\n  }\n  moveRight() {\n    if (this.getStatus() === 'playing') {\n      this.state = this.moveAndMerge(this.state, 'right');\n    }\n  }\n  moveUp() {\n    if (this.getStatus() === 'playing') {\n      this.state = this.moveAndMerge(this.state, 'up');\n    }\n  }\n  moveDown() {\n    if (this.getStatus() === 'playing') {\n      this.state = this.moveAndMerge(this.state, 'down');\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.status.playing;\n    this.addRandomTile(this.state);\n    this.addRandomTile(this.state);\n  }\n\n  restart() {\n    this.status = Game.status.idle;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.score = 0;\n  }\n\n  moveAndMerge(prevGameState, direction) {\n    const grid = JSON.parse(JSON.stringify(prevGameState));\n    const size = grid.length;\n\n    const moveRow = (row, reverse = false) => {\n      if (reverse) {\n        row.reverse();\n      }\n\n      const nonZeroElements = row.filter((value) => value !== 0);\n\n      for (let i = 0; i < nonZeroElements.length - 1; i++) {\n        if (nonZeroElements[i] === nonZeroElements[i + 1]) {\n          nonZeroElements[i] *= 2;\n          nonZeroElements[i + 1] = 0;\n\n          this.score += nonZeroElements[i];\n\n          if (this.score === 2048) {\n            this.status = Game.status.win;\n          }\n        }\n      }\n\n      const mergedElements = nonZeroElements.filter((value) => value !== 0);\n\n      while (mergedElements.length < row.length) {\n        mergedElements.push(0);\n      }\n\n      if (reverse) {\n        mergedElements.reverse();\n      }\n\n      return mergedElements;\n    };\n\n    const getColumn = (gridToGetFrom, colIndex) =>\n      gridToGetFrom.map((row) => row[colIndex]);\n\n    const setColumn = (gridToSetTo, colIndex, newCol) => {\n      newCol.forEach((value, rowIndex) => {\n        gridToSetTo[rowIndex][colIndex] = value;\n      });\n    };\n\n    if (direction === 'left' || direction === 'right') {\n      const reverse = direction === 'right';\n\n      for (let row = 0; row < size; row++) {\n        grid[row] = moveRow(grid[row], reverse);\n      }\n    } else if (direction === 'up' || direction === 'down') {\n      const reverse = direction === 'down';\n\n      for (let col = 0; col < size; col++) {\n        const column = getColumn(grid, col);\n        const newColumn = moveRow(column, reverse);\n\n        setColumn(grid, col, newColumn);\n      }\n    }\n\n    if (JSON.stringify(prevGameState) === JSON.stringify(grid)) {\n      if (!this.movesAvailable(prevGameState)) {\n        this.status = Game.status.lose;\n      }\n\n      return prevGameState;\n    }\n\n    if (this.status === 'win') {\n      return prevGameState;\n    }\n\n    return this.addRandomTile(grid);\n  }\n\n  addRandomTile(resGrid) {\n    const size = resGrid.length;\n    const emptyCells = [];\n\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col < size; col++) {\n        if (resGrid[row][col] === 0) {\n          emptyCells.push([row, col]);\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return resGrid;\n    }\n\n    const [randomRow, randomCol] =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    resGrid[randomRow][randomCol] = Math.random() < 0.1 ? 4 : 2;\n\n    return resGrid;\n  }\n\n  movesAvailable(grid) {\n    const size = grid.length;\n\n    // Check for empty cells\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col < size; col++) {\n        if (grid[row][col] === 0) {\n          return true;\n        }\n      }\n    }\n\n    // Check for possible merges\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col < size; col++) {\n        if (col < size - 1 && grid[row][col] === grid[row][col + 1]) {\n          return true; // horizontally\n        }\n\n        if (row < size - 1 && grid[row][col] === grid[row + 1][col]) {\n          return true; // vertically\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$3d28d7f1aac198f5$exports","$cd5a47cf8ef6d766$export$1e71eb4bef00f6b0","obj","key","value","defineProperty","enumerable","configurable","writable","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","TypeError","JSON","parse","stringify","state","status","idle","score","getStatus","moveAndMerge","playing","addRandomTile","prevGameState","direction","_this","grid","size","moveRow","row","reverse","nonZeroElements","filter","win","mergedElements","push","getColumn","gridToGetFrom","colIndex","map","setColumn","gridToSetTo","newCol","forEach","rowIndex","reverse1","col","newColumn","movesAvailable","lose","resGrid","emptyCells","_emptyCells_Math_floor","isArray","Math","floor","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","err","randomRow","randomCol","row1","col1","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startBtn","document","querySelector","$197cd56b15c33885$var$rows","$197cd56b15c33885$var$table","querySelectorAll","iter","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$score","$197cd56b15c33885$var$lose","$197cd56b15c33885$var$win","$197cd56b15c33885$var$updateTableCells","gameState","getState","cell","j","currentCell","children","className","classList","add","concat","textContent","addEventListener","isActive","start","restart","style","getScore","e","preventDefault","moveUp","moveDown","moveLeft","moveRight","toggle"],"version":3,"file":"index.9b209298.js.map"}